/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_f1Season__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/f1Season */ \"./src/scripts/f1Season.js\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  console.log(\"Hello world!\");\n  fetch(\"http://ergast.com/api/f1/1988.json\").then(response => response.json()).then(data => {\n    const races = data.MRData.RaceTable.Races; // Extract the races array\n    const main = document.getElementById(\"main\");\n    new _scripts_f1Season__WEBPACK_IMPORTED_MODULE_0__[\"default\"](main, races); // Create F1Season instance with the fetched races\n  }).catch(error => console.error(\"An error occurred:\", error));\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7QUFBMEM7QUFFMUNDLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsWUFBVztFQUNyREMsT0FBTyxDQUFDQyxHQUFHLENBQUMsY0FBYyxDQUFDO0VBQzNCQyxLQUFLLENBQUMsb0NBQW9DLENBQUMsQ0FDdENDLElBQUksQ0FBQ0MsUUFBUSxJQUFJQSxRQUFRLENBQUNDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDakNGLElBQUksQ0FBQ0csSUFBSSxJQUFJO0lBQ1YsTUFBTUMsS0FBSyxHQUFHRCxJQUFJLENBQUNFLE1BQU0sQ0FBQ0MsU0FBUyxDQUFDQyxLQUFLLENBQUMsQ0FBQztJQUMzQyxNQUFNQyxJQUFJLEdBQUdiLFFBQVEsQ0FBQ2MsY0FBYyxDQUFDLE1BQU0sQ0FBQztJQUM1QyxJQUFJZix5REFBUSxDQUFDYyxJQUFJLEVBQUVKLEtBQUssQ0FBQyxDQUFDLENBQUM7RUFFL0IsQ0FBQyxDQUFDLENBQ0RNLEtBQUssQ0FBQ0MsS0FBSyxJQUFJZCxPQUFPLENBQUNjLEtBQUssQ0FBQyxvQkFBb0IsRUFBRUEsS0FBSyxDQUFDLENBQUM7QUFDbkUsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNwLXNldHVwLy4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEYxU2Vhc29uIGZyb20gXCIuL3NjcmlwdHMvZjFTZWFzb25cIjtcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgZnVuY3Rpb24oKSB7XG4gICAgY29uc29sZS5sb2coXCJIZWxsbyB3b3JsZCFcIik7XG4gICAgZmV0Y2goXCJodHRwOi8vZXJnYXN0LmNvbS9hcGkvZjEvMTk4OC5qc29uXCIpXG4gICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSlcbiAgICAgICAgLnRoZW4oZGF0YSA9PiB7XG4gICAgICAgICAgICBjb25zdCByYWNlcyA9IGRhdGEuTVJEYXRhLlJhY2VUYWJsZS5SYWNlczsgLy8gRXh0cmFjdCB0aGUgcmFjZXMgYXJyYXlcbiAgICAgICAgICAgIGNvbnN0IG1haW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1haW5cIik7XG4gICAgICAgICAgICBuZXcgRjFTZWFzb24obWFpbiwgcmFjZXMpOyAvLyBDcmVhdGUgRjFTZWFzb24gaW5zdGFuY2Ugd2l0aCB0aGUgZmV0Y2hlZCByYWNlc1xuXG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmVycm9yKFwiQW4gZXJyb3Igb2NjdXJyZWQ6XCIsIGVycm9yKSk7XG59KTtcbiJdLCJuYW1lcyI6WyJGMVNlYXNvbiIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNvbnNvbGUiLCJsb2ciLCJmZXRjaCIsInRoZW4iLCJyZXNwb25zZSIsImpzb24iLCJkYXRhIiwicmFjZXMiLCJNUkRhdGEiLCJSYWNlVGFibGUiLCJSYWNlcyIsIm1haW4iLCJnZXRFbGVtZW50QnlJZCIsImNhdGNoIiwiZXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/f1Season.js":
/*!*********************************!*\
  !*** ./src/scripts/f1Season.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ F1Season; }\n/* harmony export */ });\n// import Chart from 'chart.js'; // Import Chart.js if not already imported\nconst circuitImages = {\n  \"jacarepagua\": \"https://upload.wikimedia.org/wikipedia/commons/7/75/Aut%C3%B3dromo_Internacional_Nelson_Piquet_in_Bras%C3%ADlia.svg\",\n  \"imola\": \"https://upload.wikimedia.org/wikipedia/commons/4/42/Imola.svg\",\n  \"monaco\": \"https://upload.wikimedia.org/wikipedia/commons/3/36/Monte_Carlo_Formula_1_track_map.svg\",\n  \"rodriguez\": \"https://upload.wikimedia.org/wikipedia/commons/e/ef/Aut%C3%B3dromo_Hermanos_Rodr%C3%ADguez.svg\",\n  \"villeneuve\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f9/%C3%8Ele_Notre-Dame_%28Circuit_Gilles_Villeneuve%29.svg/2560px-%C3%8Ele_Notre-Dame_%28Circuit_Gilles_Villeneuve%29.svg.png\",\n  \"detroit\": \"https://upload.wikimedia.org/wikipedia/commons/d/df/TrackMap_Detroit-2023.png\",\n  \"ricard\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f2/Le_Castellet_circuit_map_Formula_One_2019_and_2021_with_corner_names_English_19_07_2021.svg/1920px-Le_Castellet_circuit_map_Formula_One_2019_and_2021_with_corner_names_English_19_07_2021.svg.png\",\n  \"silverstone\": \"https://upload.wikimedia.org/wikipedia/commons/b/bd/Silverstone_Circuit_2020.png\",\n  \"hockenheimring\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e5/Hockenheim2012.svg/2560px-Hockenheim2012.svg.png\",\n  \"hungaroring\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Hungaroring.svg/1920px-Hungaroring.svg.png\",\n  \"spa\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/54/Spa-Francorchamps_of_Belgium.svg/2560px-Spa-Francorchamps_of_Belgium.svg.png\",\n  \"monza\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Monza_track_map.svg/2880px-Monza_track_map.svg.png\",\n  \"estoril\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/39/Estoril_track_map.svg/2880px-Estoril_track_map.svg.png\",\n  \"jerez\": \"https://upload.wikimedia.org/wikipedia/commons/2/26/Jerez_GP_Circuit_2004.png\",\n  \"suzuka\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/Suzuka_circuit_map--2005.svg/2560px-Suzuka_circuit_map--2005.svg.png\",\n  \"adelaide\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/49/Adelaide_%28long_route%29.svg/2560px-Adelaide_%28long_route%29.svg.png\"\n};\nconst driverHeadshots = {\n  \"prost\": \"https://cdn.images.autosport.com/f1greatestdrivers/mug/1955022400.jpg\",\n  \"berger\": \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSGKdVutc1doaeJGomCW6sXtWArB_b_s9ClSYME48lBNM5FJdWk5NKn0C9zxKhswt_jwpo&usqp=CAU\",\n  \"senna\": \"https://s.wsj.net/public/resources/images/B3-DW970_CAPTAI_FR_20190503142818.jpg\"\n};\nconst podiums1988 = [{\n  constructor: 'McLaren-Honda',\n  podiums: 25\n}, {\n  constructor: 'Ferrari',\n  podiums: 10\n}, {\n  constructor: 'Lotus-Honda',\n  podiums: 3\n}, {\n  constructor: 'Benetton-Ford',\n  podiums: 3\n}, {\n  constructor: 'Arrows-Megatron',\n  podiums: 1\n}, {\n  constructor: 'March-Judd',\n  podiums: 1\n}];\nconst constructorColors = {\n  'McLaren-Honda': '#c20619',\n  'Ferrari': '#ff2800',\n  'Lotus-Honda': '#00A800',\n  'Arrows-Megatron': '#6a160b',\n  'March-Judd': '#9cd5e8'\n\n  // etc.\n};\n\nconst sampleData = [{\n  x: 1,\n  y: 10\n}, {\n  x: 2,\n  y: 15\n}, {\n  x: 3,\n  y: 5\n}, {\n  x: 4,\n  y: 30\n}, {\n  x: 5,\n  y: 12\n}];\nclass F1Season {\n  constructor(mainElement, races) {\n    this.mainElement = mainElement;\n    this.races = races; // Store the races array\n    this.initializeRaces();\n    this.initializeSeasonStats();\n    this.initializeScatterPlot(); // Add this line here\n  }\n\n  initializeRaces() {\n    const raceNav = document.getElementById('race-nav');\n    this.races.forEach((race, index) => {\n      // use this.races instead of races\n      const raceLink = document.createElement('a');\n      raceLink.href = '#';\n      raceLink.className = 'race-link';\n      // raceLink.textContent = `${race.raceName} - ${race.Circuit.circuitId}`; \n      raceLink.textContent = `${race.raceName}`;\n      raceLink.addEventListener('click', e => {\n        e.preventDefault();\n\n        //removes 'active' class from all links when you click on something else\n        document.querySelectorAll('.race-link').forEach(link => {\n          link.classList.remove('active');\n        });\n        raceLink.classList.add('active');\n        this.fetchRaceDetails(index).then(details => {\n          this.populateMainContent(details);\n        });\n      });\n      raceNav.appendChild(raceLink);\n    });\n  }\n  fetchRaceDetails(index) {\n    const url = `http://ergast.com/api/f1/1988/${index + 1}/results.json`;\n    return fetch(url).then(response => response.json()).then(data => {\n      const raceDetails = data.MRData.RaceTable.Races[0];\n      return raceDetails;\n    }).catch(error => console.error(\"An error occurred:\", error));\n  }\n  populateMainContent(details) {\n    const mainContent = document.getElementById('race-content');\n    const circuitImageURL = circuitImages[details.Circuit.circuitId];\n    let tableRowsHTML = ''; // Initialize the table rows HTML variable\n\n    mainContent.classList.add('fade-out');\n    setTimeout(() => {\n      details.Results.slice(0, 5).forEach((result, index) => {\n        tableRowsHTML += `\n                <tr>\n                    <td>${index + 1}</td>\n                    <td>${result.Driver.givenName} ${result.Driver.familyName} - ${result.Constructor.name}</td>\n                    <td>${result.Time ? result.Time.time : 'N/A'}</td>\n                    <td><a href=\"${result.Driver.url}\">Driver Profile</a></td>\n                    <td><a href=\"${result.Constructor.url}\">Constructor Profile</a></td>\n                </tr>\n            `;\n      });\n      mainContent.innerHTML = `\n        <div style=\"display: flex; align-items: flex-start; font-family: Futura;\">\n        <img src=\"${circuitImageURL}\" width=\"300\" alt=\"Track Configuration\" style=\"margin-right: 20px;\" /> <!-- Added margin-right -->\n        <div>\n            <h2>${details.raceName}</h2>\n            <p>Circuit: ${details.Circuit.circuitName}</p>\n            <p>Location: ${details.Circuit.Location.locality}, ${details.Circuit.Location.country}</p>\n            <p>Date: ${details.date}</p>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Position</th>\n                        <th>Driver</th>\n                        <th>Constructor</th>\n                        <th>Time</th>\n                        <th>Profile Links</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    ${tableRowsHTML} <!-- Append the table rows here -->\n                </tbody>\n            </table>\n        </div>\n    </div>\n    `;\n      mainContent.classList.remove('fade-out');\n      ;\n    }, 500);\n  }\n  initializeSeasonStats() {\n    const mainContent = document.getElementById('race-content');\n    // Clear existing content\n    mainContent.innerHTML = '';\n\n    //start fading out\n    mainContent.classList.add('fade-out');\n    setTimeout(() => {\n      // Create a container for the chart\n      const chartContainer = document.createElement('div');\n      chartContainer.style.width = '350px'; // Set the width you want here\n      chartContainer.style.height = '200px'; // Set the height you want here\n      mainContent.appendChild(chartContainer); // Add the container to the main content area\n\n      const canvas = chartContainer.appendChild(document.createElement('canvas'));\n      const podiumsData = podiums1988.map(item => item.podiums);\n      const constructorNames = podiums1988.map(item => item.constructor);\n      const backgroundColors = podiums1988.map(item => constructorColors[item.constructor]);\n      const ctx = canvas.getContext('2d');\n      new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: podiums1988.map(item => item.constructor),\n          datasets: [{\n            label: 'Podium Wins by Constructor',\n            data: podiums1988.map(item => item.podiums),\n            backgroundColor: backgroundColors,\n            // Example color\n            borderColor: 'rgba(0, 0, 0, 0.1)',\n            // Example color\n            borderWidth: 1\n          }]\n        },\n        options: {\n          title: {\n            display: true,\n            text: 'Podium Wins by Constructor',\n            fontSize: 20,\n            // Adjust the font size as needed\n            fontColor: '#000',\n            // You can set the color if you want\n            fontStyle: 'bold' // Makes the title bold\n          },\n\n          responsive: true,\n          maintainAspectRatio: false // Allow the chart to fit the container without maintaining its aspect ratio\n        }\n      });\n\n      mainContent.classList.remove('fade-out');\n    }, 500);\n  } //end initializeSeasonStats\n\n  initializeScatterPlot() {\n    // Replace \"your-real-api-url-here\" with your actual API endpoint\n    fetch(\"your-real-api-url-here\").then(response => response.json()).then(scatterData => {\n      // Assuming scatterData is an array of objects with x and y properties\n      const ctx = document.getElementById(\"myScatterChart\").getContext(\"2d\");\n      new Chart(ctx, {\n        type: 'scatter',\n        data: {\n          datasets: [{\n            label: 'My Scatter Dataset',\n            data: scatterData.map(item => ({\n              x: item.x,\n              y: item.y\n            })),\n            backgroundColor: 'rgba(0, 123, 255, 0.5)'\n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              beginAtZero: true\n            },\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }).catch(error => {\n      console.error(\"An error occurred:\", error);\n      // You can initialize the chart with empty or fallback data here if you want\n    });\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/f1Season.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc3Atc2V0dXAvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;