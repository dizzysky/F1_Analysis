/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_f1Season__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/f1Season */ \"./src/scripts/f1Season.js\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  console.log(\"Hello world!\");\n  fetch(\"http://ergast.com/api/f1/1988.json\").then(response => response.json()).then(data => {\n    const races = data.MRData.RaceTable.Races; // Extract the races array\n    const main = document.getElementById(\"main\");\n    new _scripts_f1Season__WEBPACK_IMPORTED_MODULE_0__[\"default\"](main, races); // Create F1Season instance with the fetched races\n  }).catch(error => console.error(\"An error occurred:\", error));\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7QUFBMEM7QUFFMUNDLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsWUFBVztFQUNyREMsT0FBTyxDQUFDQyxHQUFHLENBQUMsY0FBYyxDQUFDO0VBQzNCQyxLQUFLLENBQUMsb0NBQW9DLENBQUMsQ0FDdENDLElBQUksQ0FBQ0MsUUFBUSxJQUFJQSxRQUFRLENBQUNDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDakNGLElBQUksQ0FBQ0csSUFBSSxJQUFJO0lBQ1YsTUFBTUMsS0FBSyxHQUFHRCxJQUFJLENBQUNFLE1BQU0sQ0FBQ0MsU0FBUyxDQUFDQyxLQUFLLENBQUMsQ0FBQztJQUMzQyxNQUFNQyxJQUFJLEdBQUdiLFFBQVEsQ0FBQ2MsY0FBYyxDQUFDLE1BQU0sQ0FBQztJQUM1QyxJQUFJZix5REFBUSxDQUFDYyxJQUFJLEVBQUVKLEtBQUssQ0FBQyxDQUFDLENBQUM7RUFFL0IsQ0FBQyxDQUFDLENBQ0RNLEtBQUssQ0FBQ0MsS0FBSyxJQUFJZCxPQUFPLENBQUNjLEtBQUssQ0FBQyxvQkFBb0IsRUFBRUEsS0FBSyxDQUFDLENBQUM7QUFDbkUsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNwLXNldHVwLy4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEYxU2Vhc29uIGZyb20gXCIuL3NjcmlwdHMvZjFTZWFzb25cIjtcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgZnVuY3Rpb24oKSB7XG4gICAgY29uc29sZS5sb2coXCJIZWxsbyB3b3JsZCFcIik7XG4gICAgZmV0Y2goXCJodHRwOi8vZXJnYXN0LmNvbS9hcGkvZjEvMTk4OC5qc29uXCIpXG4gICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSlcbiAgICAgICAgLnRoZW4oZGF0YSA9PiB7XG4gICAgICAgICAgICBjb25zdCByYWNlcyA9IGRhdGEuTVJEYXRhLlJhY2VUYWJsZS5SYWNlczsgLy8gRXh0cmFjdCB0aGUgcmFjZXMgYXJyYXlcbiAgICAgICAgICAgIGNvbnN0IG1haW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1haW5cIik7XG4gICAgICAgICAgICBuZXcgRjFTZWFzb24obWFpbiwgcmFjZXMpOyAvLyBDcmVhdGUgRjFTZWFzb24gaW5zdGFuY2Ugd2l0aCB0aGUgZmV0Y2hlZCByYWNlc1xuXG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmVycm9yKFwiQW4gZXJyb3Igb2NjdXJyZWQ6XCIsIGVycm9yKSk7XG59KTtcbiJdLCJuYW1lcyI6WyJGMVNlYXNvbiIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNvbnNvbGUiLCJsb2ciLCJmZXRjaCIsInRoZW4iLCJyZXNwb25zZSIsImpzb24iLCJkYXRhIiwicmFjZXMiLCJNUkRhdGEiLCJSYWNlVGFibGUiLCJSYWNlcyIsIm1haW4iLCJnZXRFbGVtZW50QnlJZCIsImNhdGNoIiwiZXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/dataset.js":
/*!********************************!*\
  !*** ./src/scripts/dataset.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   circuitImages: function() { return /* binding */ circuitImages; },\n/* harmony export */   constructorColors: function() { return /* binding */ constructorColors; },\n/* harmony export */   countryFlags: function() { return /* binding */ countryFlags; },\n/* harmony export */   driverHeadshots: function() { return /* binding */ driverHeadshots; },\n/* harmony export */   podiums1988: function() { return /* binding */ podiums1988; }\n/* harmony export */ });\nconst circuitImages = {\n  \"jacarepagua\": \"https://upload.wikimedia.org/wikipedia/commons/7/75/Aut%C3%B3dromo_Internacional_Nelson_Piquet_in_Bras%C3%ADlia.svg\",\n  \"imola\": \"https://upload.wikimedia.org/wikipedia/commons/4/42/Imola.svg\",\n  \"monaco\": \"https://upload.wikimedia.org/wikipedia/commons/3/36/Monte_Carlo_Formula_1_track_map.svg\",\n  \"rodriguez\": \"https://upload.wikimedia.org/wikipedia/commons/e/ef/Aut%C3%B3dromo_Hermanos_Rodr%C3%ADguez.svg\",\n  \"villeneuve\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f9/%C3%8Ele_Notre-Dame_%28Circuit_Gilles_Villeneuve%29.svg/2560px-%C3%8Ele_Notre-Dame_%28Circuit_Gilles_Villeneuve%29.svg.png\",\n  \"detroit\": \"https://upload.wikimedia.org/wikipedia/commons/d/df/TrackMap_Detroit-2023.png\",\n  \"ricard\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f2/Le_Castellet_circuit_map_Formula_One_2019_and_2021_with_corner_names_English_19_07_2021.svg/1920px-Le_Castellet_circuit_map_Formula_One_2019_and_2021_with_corner_names_English_19_07_2021.svg.png\",\n  \"silverstone\": \"https://upload.wikimedia.org/wikipedia/commons/b/bd/Silverstone_Circuit_2020.png\",\n  \"hockenheimring\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e5/Hockenheim2012.svg/2560px-Hockenheim2012.svg.png\",\n  \"hungaroring\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Hungaroring.svg/1920px-Hungaroring.svg.png\",\n  \"spa\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/54/Spa-Francorchamps_of_Belgium.svg/2560px-Spa-Francorchamps_of_Belgium.svg.png\",\n  \"monza\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Monza_track_map.svg/2880px-Monza_track_map.svg.png\",\n  \"estoril\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/39/Estoril_track_map.svg/2880px-Estoril_track_map.svg.png\",\n  \"jerez\": \"https://upload.wikimedia.org/wikipedia/commons/2/26/Jerez_GP_Circuit_2004.png\",\n  \"suzuka\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/Suzuka_circuit_map--2005.svg/2560px-Suzuka_circuit_map--2005.svg.png\",\n  \"adelaide\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/49/Adelaide_%28long_route%29.svg/2560px-Adelaide_%28long_route%29.svg.png\"\n};\nconst driverHeadshots = {\n  \"prost\": \"https://cdn.images.autosport.com/f1greatestdrivers/mug/1955022400.jpg\",\n  \"berger\": \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSGKdVutc1doaeJGomCW6sXtWArB_b_s9ClSYME48lBNM5FJdWk5NKn0C9zxKhswt_jwpo&usqp=CAU\",\n  \"senna\": \"https://s.wsj.net/public/resources/images/B3-DW970_CAPTAI_FR_20190503142818.jpg\"\n};\nconst podiums1988 = [{\n  constructor: 'McLaren-Honda',\n  podiums: 25\n}, {\n  constructor: 'Ferrari',\n  podiums: 10\n}, {\n  constructor: 'Lotus-Honda',\n  podiums: 3\n}, {\n  constructor: 'Benetton-Ford',\n  podiums: 3\n}, {\n  constructor: 'Arrows-Megatron',\n  podiums: 1\n}, {\n  constructor: 'March-Judd',\n  podiums: 1\n}];\nconst constructorColors = {\n  'McLaren-Honda': '#c20619',\n  'Ferrari': '#ff2800',\n  'Lotus-Honda': '#00A800',\n  'Arrows-Megatron': '#6a160b',\n  'March-Judd': '#9cd5e8'\n};\nconst countryFlags = {\n  'jacarepagua': \"https://upload.wikimedia.org/wikipedia/en/thumb/0/05/Flag_of_Brazil.svg/1200px-Flag_of_Brazil.svg.png\",\n  'imola': \"https://upload.wikimedia.org/wikipedia/en/thumb/0/03/Flag_of_Italy.svg/800px-Flag_of_Italy.svg.png\",\n  'monaco': \"https://cdn.britannica.com/82/682-004-F0B47FCB/Flag-France.jpg\",\n  'rodriguez': \"https://cdn.britannica.com/73/2573-004-29818847/Flag-Mexico.jpg\",\n  'villeneuve': \"https://cdn.britannica.com/68/7068-004-7848FEB4/Flag-Canada.jpg\",\n  'detroit': \"https://upload.wikimedia.org/wikipedia/en/thumb/a/a4/Flag_of_the_United_States.svg/1200px-Flag_of_the_United_States.svg.png\",\n  'ricard': \"https://cdn.britannica.com/82/682-004-F0B47FCB/Flag-France.jpg\",\n  'silverstone': \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a5/Flag_of_the_United_Kingdom_%281-2%29.svg/1200px-Flag_of_the_United_Kingdom_%281-2%29.svg.png\",\n  'hockenheimring': \"https://upload.wikimedia.org/wikipedia/en/thumb/b/ba/Flag_of_Germany.svg/1200px-Flag_of_Germany.svg.png\",\n  'hungaroring': \"https://cdn.britannica.com/55/1455-004-5897143C/Flag-Hungary.jpg\",\n  'spa': \"https://cdn.britannica.com/08/6408-004-405E272F/Flag-Belgium.jpg\",\n  'monza': \"https://upload.wikimedia.org/wikipedia/en/thumb/0/03/Flag_of_Italy.svg/800px-Flag_of_Italy.svg.png\",\n  'estoril': \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5c/Flag_of_Portugal.svg/255px-Flag_of_Portugal.svg.png\",\n  'jerez': \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/89/Bandera_de_Espa%C3%B1a.svg/1200px-Bandera_de_Espa%C3%B1a.svg.png\",\n  'suzuka': \"https://upload.wikimedia.org/wikipedia/en/thumb/9/9e/Flag_of_Japan.svg/800px-Flag_of_Japan.svg.png\",\n  'adelaide': \"https://cdn.britannica.com/78/6078-004-77AF7322/Flag-Australia.jpg\"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/dataset.js\n");

/***/ }),

/***/ "./src/scripts/f1Season.js":
/*!*********************************!*\
  !*** ./src/scripts/f1Season.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ F1Season; }\n/* harmony export */ });\n/* harmony import */ var _dataset__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dataset */ \"./src/scripts/dataset.js\");\n\nconst fetchData = async url => {\n  try {\n    const response = await fetch(url);\n    return await response.json();\n  } catch (error) {\n    console.error(\"An error occurred:\", error);\n    return null;\n  }\n};\nconst createLinkElement = (text, className, clickHandler) => {\n  const link = document.createElement('a');\n  link.href = '#';\n  link.className = className;\n  link.textContent = text;\n  link.addEventListener('click', clickHandler);\n  return link;\n};\nconst createRaceRowHTML = (result, index) => `\n    <tr>\n        <td>${index + 1}</td>\n        <td>${result.Driver.givenName} ${result.Driver.familyName}</td>\n        <td>${result.Constructor.name}</td>  <!-- Added this cell -->\n        <td>${result.Time ? result.Time.time : 'N/A'}</td>\n        <td><a href=\"${result.Driver.url}\">Driver Profile</a></td>\n        <!-- <td><a href=\"${result.Constructor.url}\">Constructor Profile</a></td> -->\n    </tr>\n`;\nclass F1Season {\n  constructor(mainElement, races) {\n    this.mainElement = mainElement;\n    this.races = races; // Store the races array\n    this.initializeRaces();\n    this.initializeSeasonStats();\n    // this.initializeScatterPlot();  // Add this line here\n  }\n\n  async fetchRaceDetails(index) {\n    const url = `http://ergast.com/api/f1/1988/${index + 1}/results.json`;\n    const data = await fetchData(url);\n    return data?.MRData?.RaceTable?.Races[0] ?? null;\n  }\n  initializeRaces() {\n    const raceNav = document.getElementById('race-nav');\n    this.races.forEach((race, index) => {\n      const {\n        raceName,\n        Circuit\n      } = race;\n      const flagURL = _dataset__WEBPACK_IMPORTED_MODULE_0__.countryFlags[Circuit.circuitId];\n      const raceLink = createLinkElement(raceName, 'race-link', async e => {\n        e.preventDefault();\n        // Active link handling\n        document.querySelectorAll('.race-link').forEach(link => link.classList.remove('active'));\n        raceLink.classList.add('active');\n        const details = await this.fetchRaceDetails(index);\n        this.populateMainContent(details);\n      });\n\n      // Add transitionend event listener\n      raceLink.addEventListener('transitionend', e => {\n        if (e.propertyName === 'border-bottom' || e.propertyName === 'border-bottom') {\n          raceLink.classList.add('bold-border');\n        }\n      });\n\n      // Create flag image element if URL exists\n      if (flagURL) {\n        const flagImg = document.createElement('img');\n        flagImg.src = flagURL;\n        flagImg.width = 20;\n        flagImg.alt = `Flag of ${Circuit.Location.country}`;\n        flagImg.style.marginLeft = \"10px\";\n        raceLink.appendChild(flagImg);\n      }\n      raceNav.appendChild(raceLink);\n    });\n  }\n  async populateMainContent(details) {\n    const mainContent = document.querySelector('#race-content .fade-content');\n    const circuitImageURL = _dataset__WEBPACK_IMPORTED_MODULE_0__.circuitImages[details.Circuit.circuitId];\n    let tableRowsHTML = ''; // Initialize the table rows HTML variable\n\n    //WEATHER\n    const latitude = details.Circuit.Location.lat;\n    const longitude = details.Circuit.Location.long;\n    const weatherData = await fetchWeatherData(latitude, longitude);\n    const averageTemperature = weatherData.hourly.temperature_2m.reduce((acc, val) => acc + val, 0) / weatherData.hourly.temperature_2m.length;\n    const averagePrecipitation = weatherData.hourly.precipitation.reduce((acc, val) => acc + val, 0) / weatherData.hourly.precipitation.length;\n    const roundedTemperature = parseFloat(averageTemperature).toFixed(2);\n    const roundedPrecipitation = parseFloat(averagePrecipitation).toFixed(2);\n    console.log('Full Weather Data:', weatherData);\n    console.log(weatherData);\n    if (!weatherData) {\n      console.error(\"failed to fetch weather data\");\n      return;\n    }\n    mainContent.classList.add('fade-out');\n    setTimeout(() => {\n      let tableRowsHTML = details.Results.slice(0, 5).map(createRaceRowHTML).join('');\n      mainContent.innerHTML = `\n        <div style=\"display: flex; align-items: flex-start; font-family: Futura;\">\n        <img src=\"${circuitImageURL}\" width=\"300\" alt=\"Track Configuration\" style=\"margin-right: 75px;\" /> <!-- Added margin-right -->\n        <div>\n            <h2 style=\"margin-top: 0;\">${details.raceName}</h2>\n            <p>Circuit: ${details.Circuit.circuitName}</p>\n            <p>Location: ${details.Circuit.Location.locality}, ${details.Circuit.Location.country}</p>\n            <p>Date: ${details.date}</p>\n            <table class=\"styled-table\">\n                <thead>\n                    <tr>\n                        <th>Position</th>\n                        <th>Driver</th>\n                        <th>Constructor</th>\n                        <th>Time</th>\n                        <th>Profile Links</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    ${tableRowsHTML} <!-- Append the table rows here -->\n                </tbody>\n            </table>\n        </div>\n    </div>\n    `;\n\n      //WEATHER\n      mainContent.innerHTML += `\n    <div>\n        <h2 style=\"font-size: 2em;\">Weather Data</h2>\n        <p>Temperature: ${roundedTemperature}°C</p>\n        <!-- <p>Temperature: ${weatherData.temperature_2m}°C</p> -->\n        <!-- <p>Precipitation: ${weatherData.precipitation}mm</p> -->\n        <p>Precipitation: ${roundedPrecipitation}mm</p>\n    </div>\n`;\n      mainContent.classList.remove('fade-out');\n      ;\n    }, 500);\n  }\n  async initializeSeasonStats() {\n    const mainContent = document.querySelector('#race-content .fade-content');\n    const spinner = document.getElementById('spinner');\n    spinner.style.display = 'block';\n\n    // Clear existing content\n    mainContent.innerHTML = '';\n    const scatterData = await getScatterData('1988');\n    spinner.style.display = 'none';\n\n    //start fading out\n    mainContent.classList.add('fade-out');\n    setTimeout(() => {\n      const imageBlurbContainer = document.createElement('div');\n      imageBlurbContainer.style.display = 'flex';\n      imageBlurbContainer.style.marginBottom = '50px';\n      mainContent.appendChild(imageBlurbContainer);\n\n      //Image Element\n\n      const imageElement = document.createElement('img');\n      imageElement.src = 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/75/Gerhard_Berger_1988_Canada.jpg/220px-Gerhard_Berger_1988_Canada.jpg'; // Replace this\n      imageElement.alt = 'Description of the image';\n      imageElement.width = 500; // Optional\n      imageElement.height = 300; // Optional\n      imageElement.style.marginRight = '30px';\n      imageBlurbContainer.appendChild(imageElement);\n\n      // Add the blurb to the right of the image and position it above it\n      const blurbElement = document.createElement('p');\n      blurbElement.innerHTML = `\n        The 1988 Formula One season was one of the most exciting in history. Ayrton Senna won his first Drivers' Championship, narrowly beating his McLaren teammate Alain Prost. The two drivers were closely matched throughout the season, and there were many controversial moments, including a collision between them at the Japanese Grand Prix.\n\n        The 1988 season was also the last season where turbocharged engines were allowed in Formula One. The McLaren-Honda MP4/4 was the dominant car of the year, and it won 15 of the 16 races.\n\n        The image you are seeing is of Gerhard Berger, who finished third in the Drivers' Championship. He was driving for Ferrari in 1988, and he won two races that season.\n        <br>\n        `;\n      imageBlurbContainer.appendChild(blurbElement);\n\n      //container for both charts\n      const chartsContainer = document.createElement('div');\n      chartsContainer.style.display = 'flex';\n      mainContent.appendChild(chartsContainer);\n\n      // Create a container for the FIRST chart\n      const chartContainer = document.createElement('div');\n      chartContainer.style.width = '350px'; // Set the width you want here\n      chartContainer.style.height = '200px'; // Set the height you want here\n      chartContainer.style.marginRight = '50px';\n      chartsContainer.appendChild(chartContainer); // Add the container to the main content area\n\n      const canvas = chartContainer.appendChild(document.createElement('canvas'));\n      const podiumsData = _dataset__WEBPACK_IMPORTED_MODULE_0__.podiums1988.map(item => item.podiums);\n      const constructorNames = _dataset__WEBPACK_IMPORTED_MODULE_0__.podiums1988.map(item => item.constructor);\n      const backgroundColors = _dataset__WEBPACK_IMPORTED_MODULE_0__.podiums1988.map(item => _dataset__WEBPACK_IMPORTED_MODULE_0__.constructorColors[item.constructor]);\n      const ctx = canvas.getContext('2d');\n      new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: _dataset__WEBPACK_IMPORTED_MODULE_0__.podiums1988.map(item => item.constructor),\n          datasets: [{\n            label: 'Podium Wins by Constructor',\n            data: _dataset__WEBPACK_IMPORTED_MODULE_0__.podiums1988.map(item => item.podiums),\n            backgroundColor: backgroundColors,\n            // Example color\n            borderColor: 'rgba(0, 0, 0, 0.1)',\n            // Example color \n            borderWidth: 1\n          }]\n        },\n        options: {\n          title: {\n            display: true,\n            text: 'Podium Wins by Constructor',\n            fontSize: 20,\n            // Adjust the font size as needed\n            fontColor: '#000',\n            // You can set the color if you want\n            fontStyle: 'bold' // Makes the title bold\n          },\n\n          responsive: true,\n          maintainAspectRatio: false // Allow the chart to fit the container without maintaining its aspect ratio\n        }\n      });\n\n      // Scatter Plot\n      const scatterPlotContainer = document.createElement('div');\n      scatterPlotContainer.style.width = '350px';\n      scatterPlotContainer.style.height = '200px';\n      chartsContainer.appendChild(scatterPlotContainer);\n      const scatterCanvas = scatterPlotContainer.appendChild(document.createElement('canvas'));\n      const scatterCtx = scatterCanvas.getContext('2d');\n      new Chart(scatterCtx, {\n        type: 'scatter',\n        data: {\n          datasets: [{\n            label: 'Races Participated vs Podium Finishes',\n            data: scatterData,\n            backgroundColor: 'rgba(0, 0, 255, 0.5)',\n            borderColor: 'rgba(0, 0, 0, 0.1)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          // ...scatter plot configuration here ...\n        }\n      });\n      mainContent.classList.remove('fade-out');\n    }, 500);\n  } //end initializeSeasonStats\n}\n\nasync function getScatterData(season) {\n  const url = `http://ergast.com/api/f1/${season}.json`;\n  const response = await fetchData(url);\n  const races = response.MRData.RaceTable.Races;\n  let driverData = {};\n  for (let race of races) {\n    const raceUrl = `http://ergast.com/api/f1/${season}/${race.round}/results.json`;\n    const raceResponse = await fetchData(raceUrl);\n    const results = raceResponse.MRData.RaceTable.Races[0].Results;\n    results.forEach(result => {\n      const driverId = result.Driver.driverId;\n      if (!driverData[driverId]) {\n        driverData[driverId] = {\n          races: 0,\n          podiums: 0\n        };\n      }\n      driverData[driverId].races++;\n      if (parseInt(result.position) <= 3) {\n        driverData[driverId].podiums++;\n      }\n    });\n  }\n  const scatterData = Object.keys(driverData).map(driverId => ({\n    x: driverData[driverId].races,\n    y: driverData[driverId].podiums\n  }));\n  return scatterData;\n}\nconst fetchWeatherData = async (latitude, longitude) => {\n  const url = `https://archive-api.open-meteo.com/v1/archive?latitude=${latitude}&longitude=${longitude}&start_date=2023-08-11&end_date=2023-08-25&hourly=temperature_2m,precipitation`;\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"An error occurred:\", error);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/f1Season.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc3Atc2V0dXAvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;